import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Queue<Integer> queue = new LinkedList<>();
		int n = Integer.parseInt(br.readLine());
		int num = 0;
		for (int i = 0; i < n; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			String s = st.nextToken();
			switch (s) {
			case "push":
				num = Integer.parseInt(st.nextToken());
				queue.add(num);
				break;
			case "front":
				if (queue.size() > 0) {
					System.out.println(queue.peek());
				} else {
					System.out.println("-1");
				}
				break;
			case "back":
				if (queue.size() > 0) {
					System.out.println(num);
				} else {
					System.out.println("-1");
				}
				break;
			case "pop":
				if (queue.size() > 0) {
					System.out.println(queue.poll());
				} else {
					System.out.println("-1");
				}
				break;
			case "size":
				System.out.println(queue.size());
				break;
			case "empty":
				if (queue.isEmpty()) {
					System.out.println("1");
				} else {
					System.out.println("0");
				}
				break;
			}
		}
	}

}
